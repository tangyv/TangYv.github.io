<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【队长的连载小说】偷音乐的小橘</title>
      <link href="/2019/11/15/%E5%81%B7%E9%9F%B3%E4%B9%90%E7%9A%84%E5%B0%8F%E6%A9%98/"/>
      <url>/2019/11/15/%E5%81%B7%E9%9F%B3%E4%B9%90%E7%9A%84%E5%B0%8F%E6%A9%98/</url>
      
        <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><hr><p>这是好久以前的事情惹。</p><h1 id="CHAPTER-1-第一首歌"><a href="#CHAPTER-1-第一首歌" class="headerlink" title="CHAPTER 1  第一首歌"></a>CHAPTER 1  第一首歌</h1><h2 id="The-First-Song"><a href="#The-First-Song" class="headerlink" title="The First Song"></a>The First Song</h2><p>那是哪一天，你第一次分享给我一首歌，好奇怪，那是我还不是很在意。半打趣着，我给你回了些话，将那首歌收藏到我的歌单。<br>某一天再次响起这首歌，已经是半年后，我突然想到给你发些音乐，但是又担心你不喜欢，还要回复我。<br>小橘还是把音乐分享给她了，看到你的回复有些小小激动，但也就此打住，我不知道要说些什么，因为她在另一个地方，平常基本见不到她呀。<br>和她分享音乐逐渐变得好频繁，但是小橘总在担心她喜不喜欢，心里想到 “如果不喜欢的话她会烦的吧” 于是小心小心的尝试理解她喜欢的音乐，发给她小橘自己觉得她会喜欢的音乐。</p><h1 id="CHAPTER-2-偷音乐的小橘"><a href="#CHAPTER-2-偷音乐的小橘" class="headerlink" title="CHAPTER 2 偷音乐的小橘"></a>CHAPTER 2 偷音乐的小橘</h1><h2 id="Orange-Stole-the-Song"><a href="#Orange-Stole-the-Song" class="headerlink" title="Orange Stole the Song"></a>Orange Stole the Song</h2><p>小橘希望分享给她的歌她会喜欢，但是想要碰巧遇到那些歌真是太难了。  </p><blockquote><p>“怎么才能快一点呢”  </p></blockquote><blockquote><p>“去看看她的歌单吧”  </p></blockquote><p>原来小橘和她歌单里有好多音乐重合了，小橘想从她的歌单里 “偷” 一首歌送给她。<br>并且他这么做了。<br>她很喜欢，但是小橘觉得这样不对，发誓不再这么做了<br>但小橘已经偷了她的音乐。</p><h1 id="CHAPTER-3-阳光要吃掉她了"><a href="#CHAPTER-3-阳光要吃掉她了" class="headerlink" title="CHAPTER 3 阳光要吃掉她了"></a>CHAPTER 3 阳光要吃掉她了</h1><h2 id="the-Light-is-Swallowing-Her"><a href="#the-Light-is-Swallowing-Her" class="headerlink" title="the Light is Swallowing Her"></a>the Light is Swallowing Her</h2><p>小橘和她发消息越来越频繁了，渐渐也不止发音乐了，他们会聊很少的话题，但小橘一直想聊很多的话题。小橘担心这会让她烦恼，于是大致一周和她聊一次天。<br>小橘发现自己越来越经常看到她，但是以前他们也天天在同一个地方，为什么以前没有经常看到呢。<br>直到有一段时间，小橘一直没有看到她。小橘问她，她告诉小橘她这段时间要去一个海岛上休息，暂时不会回来了。<br>小橘将信将疑，感觉事情并不简单。<br>两个月后，小橘越发觉得不对，决定问她到底发生什么了。她告诉小橘  </p><blockquote><p>“我要被光吞掉了”</p></blockquote><blockquote><p>“但是我给你留了照片，在你桌子里”</p></blockquote><p>小镇中每年都会有很多橘子被光吞掉，但是小橘没有想到她也会… …<br>小橘想去海岛上找她，但是自己还在树上，不能去。  </p><blockquote><p>那就让她听到音乐吧！  </p></blockquote><p>小橘这样想到</p><h1 id="CHAPTER-4-小橘去找她了"><a href="#CHAPTER-4-小橘去找她了" class="headerlink" title="CHAPTER 4 小橘去找她了"></a>CHAPTER 4 小橘去找她了</h1><h2 id="Orange-Date-With-Her"><a href="#Orange-Date-With-Her" class="headerlink" title="Orange Date With Her"></a>Orange Date With Her</h2><p>待续<br>To Be Detailed/Continued</p>]]></content>
      
      
      <categories>
          
          <category> 橘子味儿 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法参考</title>
      <link href="/2019/11/09/Markdown-%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"/>
      <url>/2019/11/09/Markdown-%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1 id="本文来自果冻虾仁，在此用于Blog语法参考与入门，欢迎各位follow原作者。"><a href="#本文来自果冻虾仁，在此用于Blog语法参考与入门，欢迎各位follow原作者。" class="headerlink" title="本文来自果冻虾仁，在此用于Blog语法参考与入门，欢迎各位follow原作者。"></a>本文来自<code>果冻虾仁</code>，在此用于Blog语法参考与入门，欢迎各位follow原作者。</h1><p>该文件用来测试和展示书写README的各种markdown语法。GitHub的markdown语法在标准的markdown语法基础上做了扩充，称之为<code>GitHub Flavored Markdown</code>。简称<code>GFM</code>，GFM在GitHub上有广泛应用，除了README文件外，issues和wiki均支持markdown语法。</p><hr><table><thead><tr><th>Author</th><th>果冻虾仁</th></tr></thead><tbody><tr><td>E-mail</td><td><a href="mailto:Jelly.K.Wang@qq.com" target="_blank" rel="noopener">Jelly.K.Wang@qq.com</a></td></tr></tbody></table><hr><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#横线">横线</a></li><li><a href="#标题">标题</a></li><li><a href="#文本">文本</a><ul><li>普通文本</li><li>单行文本</li><li>多行文本</li><li>文字高亮</li><li>换行</li><li>斜体</li><li>粗体</li><li>删除线</li></ul></li><li><a href="#图片">图片</a><ul><li>来源于网络的图片</li><li>GitHub仓库中的图片</li></ul></li><li><a href="#链接">链接</a> <ul><li>文字超链接<ul><li>链接外部URL</li><li>链接本仓库里的URL</li></ul></li><li>锚点</li><li><a href="#图片链接">图片链接</a></li></ul></li><li><a href="#列表">列表</a><ul><li>无序列表</li><li>有序列表</li><li>复选框列表</li></ul></li><li><a href="#块引用">块引用</a></li><li><a href="#代码高亮">代码高亮</a></li><li><a href="#表格">表格</a> </li><li><a href="#表情">表情</a></li><li><a href="#diff语法">diff语法</a></li></ul><h3 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h3><hr><p>***、—、___可以显示横线效果</p><hr><hr><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="普通文本"><a href="#普通文本" class="headerlink" title="普通文本"></a>普通文本</h3><p>这是一段普通的文本</p><h3 id="单行文本"><a href="#单行文本" class="headerlink" title="单行文本"></a>单行文本</h3><pre><code>Hello,大家好，我是果冻虾仁。</code></pre><p>在一行开头加入1个Tab或者4个空格。</p><h3 id="文本块"><a href="#文本块" class="headerlink" title="文本块"></a>文本块</h3><h4 id="语法1"><a href="#语法1" class="headerlink" title="语法1"></a>语法1</h4><p>在连续几行的文本开头加入1个Tab或者4个空格。</p><pre><code>欢迎到访很高兴见到您祝您，早上好，中午好，下午好，晚安</code></pre><h4 id="语法2"><a href="#语法2" class="headerlink" title="语法2"></a>语法2</h4><p>使用一对各三个的反引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">欢迎到访</span><br><span class="line">我是C++码农</span><br><span class="line">你可以在知乎、CSDN、简书搜索【果冻虾仁】找到我</span><br></pre></td></tr></table></figure><p>该语法也可以实现代码高亮，见<a href="#代码高亮">代码高亮</a></p><h3 id="文字高亮"><a href="#文字高亮" class="headerlink" title="文字高亮"></a>文字高亮</h3><p>文字高亮功能能使行内部分文字高亮，使用一对反引号。<br>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`linux` `网络编程` `socket` `epoll`</span><br></pre></td></tr></table></figure><p>效果：<code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></p><p>也适合做一篇文章的tag</p><h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><p>直接回车不能换行，<br>可以在上一行文本后面补两个空格，<br>这样下一行的文本就换行了。</p><p>或者就是在两行文本直接加一个空行。</p><p>也能实现换行效果，不过这个行间距有点大。</p><h4 id="斜体、粗体、删除线"><a href="#斜体、粗体、删除线" class="headerlink" title="斜体、粗体、删除线"></a>斜体、粗体、删除线</h4><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>*斜体1*</code></td><td><em>斜体1</em></td></tr><tr><td><code>_斜体2_</code></td><td><em>斜体2</em></td></tr><tr><td><code>**粗体1**</code></td><td><strong>粗体1</strong></td></tr><tr><td><code>__粗体2__</code></td><td><strong>粗体2</strong></td></tr><tr><td><code>这是一个 ~~删除线~~</code></td><td>这是一个 <del>删除线</del></td></tr><tr><td><code>***斜粗体1***</code></td><td><strong><em>斜粗体1</em></strong></td></tr><tr><td><code>___斜粗体2___</code></td><td><strong><em>斜粗体2</em></strong></td></tr><tr><td><code>***~~斜粗体删除线1~~***</code></td><td><strong><em><del>斜粗体删除线1</del></em></strong></td></tr><tr><td><code>~~***斜粗体删除线2***~~</code></td><td><del><strong><em>斜粗体删除线2</em></strong></del></td></tr></tbody></table><pre><code>斜体、粗体、删除线可混合使用</code></pre><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>基本格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt](URL title)</span><br></pre></td></tr></table></figure><p>alt和title即对应HTML中的alt和title属性（都可省略）：</p><ul><li>alt表示图片显示失败时的替换文本</li><li>title表示鼠标悬停在图片时的显示文本（注意这里要加引号）</li></ul><p>URL即图片的url地址，如果引用本仓库中的图片，直接使用<strong>相对路径</strong>就可了，如果引用其他github仓库中的图片要注意格式，即：<code>仓库地址/raw/分支名/图片路径</code>，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/guodongxiaren/ImageCache/raw/master/Logo/foryou.gif</span><br></pre></td></tr></table></figure><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>![baidu](http://www.baidu.com/img/bdlogo.gif &quot;百度logo&quot;)</code></td><td><figure class="image-box">                <img src="http://www.baidu.com/img/bdlogo.gif" alt="baidu" title="百度logo" class="">                <p>百度logo</p>            </figure></td></tr><tr><td>2</td><td><code>![][code-past]</code></td><td><img src="https://img-blog.csdnimg.cn/201908060004034.png" alt=""></td></tr></tbody></table><p>注意例2的写法使用了<strong>URL标识符</strong>的形式，在<a href="#链接">链接</a>一节有介绍。</p><blockquote><p>在文末有code-past的定义：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[code-past]:https://img-blog.csdnimg.cn/201908060004034.png</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="链接外部URL"><a href="#链接外部URL" class="headerlink" title="链接外部URL"></a>链接外部URL</h3><table><thead><tr><th>#</th><th>语法</th><th>效果</th></tr></thead><tbody><tr><td>1</td><td><code>[我的博客](http://blog.csdn.net/guodongxiaren &quot;悬停显示&quot;)</code></td><td><a href="http://blog.csdn.net/guodongxiaren" target="_blank" rel="noopener" title="悬停显示">我的博客</a></td></tr><tr><td>2</td><td><code>[我的知乎][zhihu]</code></td><td><a href="https://www.zhihu.com/people/jellywong" target="_blank" rel="noopener" title="我的知乎，欢迎关注">我的知乎</a></td></tr></tbody></table><p>语法2由两部分组成：</p><ul><li>第一部分使用两个中括号，[ ]里的标识符（本例中zhihu），可以是数字，字母等的组合，标识符上下对应就行了（<strong>姑且称之为URL标识符</strong>）</li><li>第二部分标记实际URL。</li></ul><blockquote><p>使用URL标识符能达到复用的目的，一般把全文所有的URL标识符统一放在文章末尾，这样看起来比较干净。</p><blockquote><p>URL标识符是我起的名字，不知道是否准确。囧。。</p></blockquote></blockquote><h3 id="链接本仓库里的URL"><a href="#链接本仓库里的URL" class="headerlink" title="链接本仓库里的URL"></a>链接本仓库里的URL</h3><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[我的简介](/example/profile.md)</code></td><td><a href="/example/profile.md">我的简介</a></td></tr><tr><td><code>[example](./example)</code></td><td><a href="./example">example</a></td></tr></tbody></table><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><p>给图片加链接的本质是混合图片显示语法和普通的链接语法。普通的链接中[ ]内部是链接要显示的文本，而图片链接[ ]里面则是要显示的图片。<br>直接混合两种语法当然可以，但是十分啰嗦，为此我们可以使用URL标识符的形式。</p><table><thead><tr><th>#</th><th>语法</th><th align="center">效果</th></tr></thead><tbody><tr><td>1</td><td>`[<figure class="image-box">                <img src="http://weibo.com/linpiaochen" alt="weibo-logo]](http://weibo.com/linpiaochen)`|[![weibo-logo]" title="" class="">                <p>weibo-logo]](http://weibo.com/linpiaochen)`|[![weibo-logo]</p>            </figure></td><td align="center"></td></tr><tr><td>2</td><td>`<a href="https://www.zhihu.com/people/jellywong" target="_blank" rel="noopener" title="我的知乎，欢迎关注"><figure class="image-box">                <img src="/img/zhihu.png" alt="](/img/zhihu.png "我的知乎，欢迎关注")][zhihu]`|[![" title="我的知乎，欢迎关注" class="">                <p>我的知乎，欢迎关注</p>            </figure></a></td><td align="center"></td></tr><tr><td>3</td><td><code>[![csdn-logo]][csdn]</code></td><td align="center"><a href="http://blog.csdn.net/guodongxiaren" target="_blank" rel="noopener" title="我的博客"><img src="/img/csdn.png" alt="csdn-logo" title="我的CSDN博客"></a></td></tr></tbody></table><p>因为图片本身和链接本身都支持URL标识符的形式，所以图片链接也可以很简洁（见例3）。<br>注意，此时鼠标悬停时显示的文字是图片的title，而非链接本身的title了。</p><blockquote><p>本文URL标识符都放置于文末</p></blockquote><h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>其实呢，每一个标题都是一个锚点，和HTML的锚点（<code>#</code>）类似，比如我们 </p><table><thead><tr><th>语法</th><th>效果</th></tr></thead><tbody><tr><td><code>[回到顶部](#readme)</code></td><td><a href="#readme">回到顶部</a></td></tr></tbody></table><p>不过要注意，标题中的英文字母都被转化为<strong>小写字母</strong>了。</p><blockquote><p>以前GitHub对中文支持的不好，所以中文标题不能正确识别为锚点，但是现在已经没问题啦！</p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 昵称：果冻虾仁</span><br><span class="line">- 别名：隔壁老王</span><br><span class="line">* 英文名：Jelly</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><ul><li>昵称：果冻虾仁</li></ul><ul><li>别名：隔壁老王</li></ul><ul><li>英文名：Jelly</li></ul><h3 id="多级无序列表"><a href="#多级无序列表" class="headerlink" title="多级无序列表"></a>多级无序列表</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 编程语言</span><br><span class="line">    * 脚本语言</span><br><span class="line">        * Python</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><ul><li>编程语言<ul><li>脚本语言<ul><li>Python</li></ul></li></ul></li></ul><h3 id="一级有序列表"><a href="#一级有序列表" class="headerlink" title="一级有序列表"></a>一级有序列表</h3><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><p>就是在数字后面加一个点，再加一个空格。不过看起来起来可能不够明显。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">面向对象的三个基本特征：</span><br><span class="line"></span><br><span class="line">1. 封装</span><br><span class="line">2. 继承</span><br><span class="line">3. 多态</span><br></pre></td></tr></table></figure><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><p>面向对象的三个基本特征：</p><ol><li>封装</li><li>继承</li><li>多态</li></ol><h3 id="多级有序列表"><a href="#多级有序列表" class="headerlink" title="多级有序列表"></a>多级有序列表</h3><p>和无序列表一样，有序列表也有多级结构。</p><h4 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 这是一级的有序列表，数字1还是1</span><br><span class="line">   1. 这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字</span><br><span class="line">      1. 这是三级的有序列表，数字在显示的时候变成了英文字母</span><br></pre></td></tr></table></figure><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><ol><li>这是一级的有序列表，数字1还是1<ol><li>这是二级的有序列表，阿拉伯数字在显示的时候变成了罗马数字<ol><li>这是三级的有序列表，数字在显示的时候变成了英文字母</li></ol></li></ol></li></ol><h3 id="复选框列表"><a href="#复选框列表" class="headerlink" title="复选框列表"></a>复选框列表</h3><h4 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- [x] 需求分析</span><br><span class="line">- [x] 系统设计</span><br><span class="line">- [x] 详细设计</span><br><span class="line">- [ ] 编码</span><br><span class="line">- [ ] 测试</span><br><span class="line">- [ ] 交付</span><br></pre></td></tr></table></figure><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><ul><li><input checked="" disabled="" type="checkbox"> 需求分析</li><li><input checked="" disabled="" type="checkbox"> 系统设计</li><li><input checked="" disabled="" type="checkbox"> 详细设计</li><li><input disabled="" type="checkbox"> 编码</li><li><input disabled="" type="checkbox"> 测试</li><li><input disabled="" type="checkbox"> 交付</li></ul><p>您可以使用这个功能来标注某个项目各项任务的完成情况。</p><blockquote><p>Tip:</p><blockquote><p>在GitHub的<strong>issue</strong>中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。</p></blockquote></blockquote><h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><h3 id="常用于引用文本"><a href="#常用于引用文本" class="headerlink" title="常用于引用文本"></a>常用于引用文本</h3><h4 id="文本摘自《深入理解计算机系统》P27"><a href="#文本摘自《深入理解计算机系统》P27" class="headerlink" title="文本摘自《深入理解计算机系统》P27"></a>文本摘自《深入理解计算机系统》P27</h4><p>　令人吃惊的是，在哪种字节顺序是合适的这个问题上，人们表现得非常情绪化。实际上术语“little endian”（小端）和“big endian”（大端）出自Jonathan Swift的《格利佛游记》一书，其中交战的两个派别无法就应该从哪一端打开一个半熟的鸡蛋达成一致。因此，争论沦为关于社会政治的争论。只要选择了一种规则并且始终如一的坚持，其实对于哪种字节排序的选择都是任意的。</p><blockquote><p><strong>“端”（endian）的起源</strong><br>以下是Jonathan Swift在1726年关于大小端之争历史的描述：<br>“……下面我要告诉你的是，Lilliput和Blefuscu这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今的皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了，因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破较小的一端，违令者重罚。”</p></blockquote><h3 id="块引用有多级结构"><a href="#块引用有多级结构" class="headerlink" title="块引用有多级结构"></a>块引用有多级结构</h3><h4 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 数据结构</span><br><span class="line">&gt;&gt; 树</span><br><span class="line">&gt;&gt;&gt; 二叉树</span><br><span class="line">&gt;&gt;&gt;&gt; 平衡二叉树</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 满二叉树</span><br></pre></td></tr></table></figure><h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><blockquote><p>数据结构</p><blockquote><p>树</p><blockquote><p>二叉树</p><blockquote><p>平衡二叉树</p><blockquote><p>满二叉树</p></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><p>在三个反引号后面加上编程语言的名字，另起一行开始写代码，最后一行再加上三个反引号。</p><h3 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[]args)</span></span>&#123;&#125; <span class="comment">//Java</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> <span class="comment">//C</span></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"hello GitHub"</span> <span class="comment">#Bash</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myH1"</span>).innerHTML=<span class="string">"Welcome to my Homepage"</span>; <span class="comment">//javascipt</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> &amp;<span class="keyword">operator</span>+(<span class="keyword">const</span> <span class="built_in">string</span>&amp; A,<span class="keyword">const</span> <span class="built_in">string</span>&amp; B) <span class="comment">//cpp</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><table><thead><tr><th>表头1</th><th>表头2</th></tr></thead><tbody><tr><td>表格单元</td><td>表格单元</td></tr><tr><td>表格单元</td><td>表格单元</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>表格可以指定对齐方式</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">col 3 is</td><td align="center">some wordy text</td><td align="right">$1600</td></tr><tr><td align="left">col 2 is</td><td align="center">centered</td><td align="right">$12</td></tr><tr><td align="left">zebra stripes</td><td align="center">are neat</td><td align="right">$1</td></tr></tbody></table><h3 id="混合其他语法"><a href="#混合其他语法" class="headerlink" title="混合其他语法"></a>混合其他语法</h3><p>表格单元中的内容可以和其他大多数GFM语法配合使用，如：  </p><h4 id="使用普通文本的删除线，斜体等效果"><a href="#使用普通文本的删除线，斜体等效果" class="headerlink" title="使用普通文本的删除线，斜体等效果"></a>使用普通文本的删除线，斜体等效果</h4><table><thead><tr><th>名字</th><th>描述</th></tr></thead><tbody><tr><td>Help</td><td><del>Display the</del> help window.</td></tr><tr><td>Close</td><td><em>Closes</em> a window</td></tr></tbody></table><h4 id="表格中嵌入图片（链接）"><a href="#表格中嵌入图片（链接）" class="headerlink" title="表格中嵌入图片（链接）"></a>表格中嵌入图片（链接）</h4><p>其实前面介绍图片显示、图片链接的时候为了清晰就是放在在表格中显示的。</p><table><thead><tr><th>图片</th><th>描述</th></tr></thead><tbody><tr><td><img src="http://www.baidu.com/img/bdlogo.gif" alt="baidu" title="百度logo"></td><td>百度</td></tr></tbody></table><h2 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h2><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。</p><p>比如<code>:blush:</code>，可以显示:blush:。</p><p>具体每一个表情的符号码，可以查询GitHub的官方网页<a href="http://www.emoji-cheat-sheet.com" target="_blank" rel="noopener">http://www.emoji-cheat-sheet.com</a>。</p><p>但是这个网页每次都打开<strong>奇慢</strong>。。所以我整理到了本repo中，大家可以直接在此查看<a href="./emoji.md">emoji</a>。</p><h2 id="diff语法"><a href="#diff语法" class="headerlink" title="diff语法"></a>diff语法</h2><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。</p><h4 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h4><p>其语法与代码高亮类似，只是在三个反引号后面写diff，<br>并且其内容中，可以用 <code>+</code>开头表示新增，<code>-</code>开头表示删除。<br>另外还有有 <code>!</code>和<code>#</code>的语法。</p><h4 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 人闲桂花落，</span></span><br><span class="line"><span class="deletion">- 夜静春山空。</span></span><br><span class="line"><span class="addition">! 月出惊山鸟，</span></span><br><span class="line"># 时鸣春涧中。</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 引文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo GitHub Page构建路线</title>
      <link href="/2019/11/07/Hexo%20GitHub%20Page%E6%9E%84%E5%BB%BA%E8%B7%AF%E7%BA%BF/"/>
      <url>/2019/11/07/Hexo%20GitHub%20Page%E6%9E%84%E5%BB%BA%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>关于</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo GitHub Page </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
